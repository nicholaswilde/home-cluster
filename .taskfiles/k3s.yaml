---
# yamllint disable rule:line-length
version: '3'

tasks:
  sources:
    desc: Install flux sources
    cmds:
      - kubectl apply -f ./cluster/sources/
    silent: true

  label:
    desc: Label the worker nodes
    cmds:
      - kubectl label node worker-02 node-role.kubernetes.io/worker=worker
      - kubectl label node worker-03 node-role.kubernetes.io/worker=worker
      - kubectl label node worker-04 node-role.kubernetes.io/worker=worker
      - kubectl label node worker-05 node-role.kubernetes.io/worker=worker
      - kubectl label node worker-06 node-role.kubernetes.io/worker=worker
      - kubectl label node worker-07 node-role.kubernetes.io/worker=worker
      - kubectl get nodes
    silent: true

  nginx:
    desc: Deploy nginx
    cmds:
      - |
        kubectl apply -f \
        https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-{{ .VERSION }}/deploy/static/provider/cloud/deploy.yaml
    vars:
      VERSION: "v0.44.0"
    silent: true

  metallb:
    desc: Deploy metallb
    cmds:
      - |
        kubectl apply -f \
        https://raw.githubusercontent.com/metallb/metallb/{{ .VERSION }}/manifests/namespace.yaml
      - |
        kubectl apply -f \
        https://raw.githubusercontent.com/metallb/metallb/{{ .VERSION }}/manifests/metallb.yaml
      - |
        kubectl create secret generic -n metallb-system memberlist \
        --from-literal=secretkey="$(openssl rand -base64 128)"
      - |
        kubectl apply -f \
        {{ .CLUSTER_DIR }}/kube-system/metallb/configmap.yaml
    vars:
      VERSION: "v0.9.6"
    silent: true

  system-upgrade:
    desc: Install system upgrade
    cmds:
      - kubectl apply -k ./cluster/system-upgrade/
      - kubectl ns system-upgrade
    silent: true

  plans:
    desc: Apply system-upgrade plans
    cmds:
      - kubectl apply -f ./staging/system-upgrade/
      - watch kubectl get all
    silent: true

  storage:
    desc: Install managed-nfs-storage
    cmds:
      - kubectl apply -f ./cluster/managed-nfs-storage/
    silent: true

  taint:
    desc: Taint the main node with CriticalAddonsOnly=true:NoExecute
    cmds:
      - kubectl taint nodes {{ .NAME }} CriticalAddonsOnly=true:NoExecute
    vars:
      NAME:
        sh: >-
          kubectl get nodes -o=jsonpath="{range .items[*]}{.metadata.name}"
          -l node-role.kubernetes.io/master=true
    silent: true

  untaint:
    desc: Untaint the main node with CriticalAddonsOnly=true:NoExecute
    cmds:
      - kubectl taint nodes {{ .NAME }} CriticalAddonsOnly=true:NoExecute-
    vars:
      NAME:
        sh: >-
          kubectl get nodes -o=jsonpath="{range .items[*]}{.metadata.name}"
          -l node-role.kubernetes.io/master=true
    silent: true

  reclaim:
    desc: Change the reclaim policy on a pv
    cmds:
      - >-
        kubectl patch pv {{ .NAME }}
        -p '{"spec":{"persistentVolumeReclaimPolicy":"{{.POLICY}}"}}'
    vars:
      POLICY: Retain
    deps:
      - _check-name

  _check-name:
    cmds:
      - test ! -z "{{ .NAME }}" || (echo "NAME is not set"; exit 1;)
    silent: true
