---
- name: metallb | install required dependencies
  package:
    name:
      - python3-pip
      - python3-setuptools
      - build-essential
      - python-dev
    state: present
  become: true

- name: metallb | wheel Python library is installed.
  ansible.builtin.pip:
    name: wheel
    state: present
  become: true

- name: metallb | ruamel.yaml Python library is installed.
  ansible.builtin.pip:
    name: ruamel.yaml
    state: present
  become: true

- name: metallb | openshift Python library is installed.
  ansible.builtin.pip:
    name: openshift
    state: present
  become: true

- name: metallb | Create temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: temp
  register: tempdir

- name: metallb | download namespace.
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/metallb/metallb/{{ metallb.version }}/manifests/namespace.yaml'
    dest: "{{ tempdir.path }}/namespace.yaml"
    mode: '0755'

- name: metallb | download metallb
  ansible.builtin.get_url:
    url: 'https://raw.githubusercontent.com/metallb/metallb/{{ metallb.version }}/manifests/metallb.yaml'
    dest: "{{ tempdir.path }}/metallb.yaml"
    mode: '0755'

- name: metallb | create password
  shell: openssl rand -base64 128
  register: command_output

- set_fact:
    secret: "{{ command_output.stdout }}"

- name: metallb | apply namespace
  community.kubernetes.k8s:
    state: present
    src: "{{ tempdir.path }}/namespace.yaml"

- name: metallb | apply metallb
  community.kubernetes.k8s:
    state: present
    src: "{{ tempdir.path }}/metallb.yaml"

- name: metallb | apply password
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: memberlist
        namespace: metallb-system
      data:
        secretKey: '{{ secret }}'

- name: metallb | apply configmap
  community.kubernetes.k8s:
    state: present
    template: 'configmap.j2'
